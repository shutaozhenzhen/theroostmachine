<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" Sdk="Microsoft.NET.Sdk" InitialTargets="CheckEnvironmentVars">
  <Target Name="CheckEnvironmentVars">
    <Error Text="Please set the CSDir environment variable." Condition="'$(CSDir)' == ''" ContinueOnError="false" />
  </Target>

  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <CSDataDir>$([System.IO.Path]::Combine($(CSDir), 'cultistsimulator_Data'))</CSDataDir>
    <CSModDir>$([System.IO.Path]::Combine($(USERPROFILE), 'AppData\LocalLow\Weather Factory\Cultist Simulator\mods'))</CSModDir>

  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
    <CSDataDir>$([System.IO.Path]::Combine($(CSDir), 'OSX.app\Contents\Resources\Data'))</CSDataDir>
    <CSModDir>$([System.IO.Path]::Combine($(HOME), 'Library\Application Support\Weather Factory\Cultist Simulator\mods'))</CSModDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{27DA367E-CF6D-48EC-B2EF-3FC992183396}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Roost</RootNamespace>
    <AssemblyName>TheRoostMachine</AssemblyName>
    <LangVersion>latest</LangVersion>
    <TargetFramework>net472</TargetFramework>
    <FileAlignment>512</FileAlignment>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutDir>$([System.IO.Path]::Combine($(CSModDir), 'Roost\dll'))</OutDir>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>none</DebugType>
    <Optimize>true</Optimize>
    <OutDir>$([System.IO.Path]::Combine($(CSModDir), 'Roost\dll'))</OutDir>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <LangVersion>7</LangVersion>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="GalaxyCSharp">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\GalaxyCSharp.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=4.5.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\Newtonsoft.Json.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="OrbCreations">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\OrbCreations.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="SecretHistories.Enums">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\SecretHistories.Enums.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="SecretHistories.Interfaces">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\SecretHistories.Interfaces.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="SecretHistories.Main">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\SecretHistories.Main.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Steamworks">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\Steamworks.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Unity.InputSystem">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\Unity.InputSystem.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Unity.TextMeshPro">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\Unity.TextMeshPro.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\UnityEngine.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.AudioModule">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\UnityEngine.AudioModule.dll'))</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\UnityEngine.CoreModule.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.TextRenderingModule">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\UnityEngine.TextRenderingModule.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.TextCoreFontEngineModule">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\UnityEngine.TextCoreFontEngineModule.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\UnityEngine.UI.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.UIModule">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\UnityEngine.UIModule.dll'))</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.ParticleSystemModule">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\UnityEngine.ParticleSystemModule.dll'))</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.UnityWebRequestAudioModule">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\UnityEngine.UnityWebRequestAudioModule.dll'))</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.UnityWebRequestModule">
      <HintPath>$([System.IO.Path]::Combine($(CSDataDir), 'Managed\UnityEngine.UnityWebRequestModule.dll'))</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="NCalc">
      <HintPath>.\externals\NCalc.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Lib.Harmony" Version="2.2.1" />
  </ItemGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>
